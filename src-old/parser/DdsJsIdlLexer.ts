// Generated from src/parser/DdsJsIdl.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";

// @ts-nocheck

export default class DdsJsIdlLexer extends Lexer {
	public static readonly OPEN_BRACE = 1;
	public static readonly ASSIGN_OP = 2;
	public static readonly CLOSE_BRACE = 3;
	public static readonly STAT_END = 4;
	public static readonly OPEN_ANGLE = 5;
	public static readonly CLOSE_ANGLE = 6;
	public static readonly OPEN_SQUARE = 7;
	public static readonly CLOSE_SQUARE = 8;
	public static readonly COMMA_SEP = 9;
	public static readonly SCOPE_OP = 10;
	public static readonly COLON_SEP = 11;
	public static readonly OPEN_PAREN = 12;
	public static readonly CLOSE_PAREN = 13;
	public static readonly MINUS_OP = 14;
	public static readonly DOT_OP = 15;
	public static readonly MODULE_KW = 16;
	public static readonly TYPEDEF_KW = 17;
	public static readonly CONST_KW = 18;
	public static readonly ENUM_KW = 19;
	public static readonly OCTET_KW = 20;
	public static readonly UNSIGNED_KW = 21;
	public static readonly SHORT_KW = 22;
	public static readonly LONG_KW = 23;
	public static readonly FLOAT_KW = 24;
	public static readonly DOUBLE_KW = 25;
	public static readonly STRING_KW = 26;
	public static readonly SEQUENCE_KW = 27;
	public static readonly STRUCT_KW = 28;
	public static readonly VALUETYPE_KW = 29;
	public static readonly UNION_KW = 30;
	public static readonly SWITCH_KW = 31;
	public static readonly CASE_KW = 32;
	public static readonly BOOLEAN_KW = 33;
	public static readonly CHAR_KW = 34;
	public static readonly BOOLEAN_TRUE = 35;
	public static readonly BOOLEAN_FALSE = 36;
	public static readonly DEFAULT_KW = 37;
	public static readonly IDENTIFIER = 38;
	public static readonly NATURAL_NUMBER = 39;
	public static readonly HEXADECIMAL_LITERAL = 40;
	public static readonly OCTAL_LITERAL = 41;
	public static readonly DIGIT_SEQUENCE = 42;
	public static readonly REAL_NUMBER = 43;
	public static readonly STRING_LITERAL = 44;
	public static readonly CHAR_LITERAL = 45;
	public static readonly FLOAT_EXP_PREFIX = 46;
	public static readonly FIXED_PT_SUFFIX = 47;
	public static readonly WS = 48;
	public static readonly SL_COMMENT = 49;
	public static readonly ML_COMMENT = 50;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'{'", 
                                                            "'='", "'}'", 
                                                            "';'", "'<'", 
                                                            "'>'", "'['", 
                                                            "']'", "','", 
                                                            "'::'", "':'", 
                                                            "'('", "')'", 
                                                            "'-'", "'.'", 
                                                            "'module'", 
                                                            "'typedef'", 
                                                            "'const'", "'enum'", 
                                                            "'octet'", "'unsigned'", 
                                                            "'short'", "'long'", 
                                                            "'float'", "'double'", 
                                                            "'string'", 
                                                            "'sequence'", 
                                                            "'struct'", 
                                                            "'valuetype'", 
                                                            "'union'", "'switch'", 
                                                            "'case'", "'boolean'", 
                                                            "'char'", "'TRUE'", 
                                                            "'FALSE'", "'default'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "OPEN_BRACE", 
                                                             "ASSIGN_OP", 
                                                             "CLOSE_BRACE", 
                                                             "STAT_END", 
                                                             "OPEN_ANGLE", 
                                                             "CLOSE_ANGLE", 
                                                             "OPEN_SQUARE", 
                                                             "CLOSE_SQUARE", 
                                                             "COMMA_SEP", 
                                                             "SCOPE_OP", 
                                                             "COLON_SEP", 
                                                             "OPEN_PAREN", 
                                                             "CLOSE_PAREN", 
                                                             "MINUS_OP", 
                                                             "DOT_OP", "MODULE_KW", 
                                                             "TYPEDEF_KW", 
                                                             "CONST_KW", 
                                                             "ENUM_KW", 
                                                             "OCTET_KW", 
                                                             "UNSIGNED_KW", 
                                                             "SHORT_KW", 
                                                             "LONG_KW", 
                                                             "FLOAT_KW", 
                                                             "DOUBLE_KW", 
                                                             "STRING_KW", 
                                                             "SEQUENCE_KW", 
                                                             "STRUCT_KW", 
                                                             "VALUETYPE_KW", 
                                                             "UNION_KW", 
                                                             "SWITCH_KW", 
                                                             "CASE_KW", 
                                                             "BOOLEAN_KW", 
                                                             "CHAR_KW", 
                                                             "BOOLEAN_TRUE", 
                                                             "BOOLEAN_FALSE", 
                                                             "DEFAULT_KW", 
                                                             "IDENTIFIER", 
                                                             "NATURAL_NUMBER", 
                                                             "HEXADECIMAL_LITERAL", 
                                                             "OCTAL_LITERAL", 
                                                             "DIGIT_SEQUENCE", 
                                                             "REAL_NUMBER", 
                                                             "STRING_LITERAL", 
                                                             "CHAR_LITERAL", 
                                                             "FLOAT_EXP_PREFIX", 
                                                             "FIXED_PT_SUFFIX", 
                                                             "WS", "SL_COMMENT", 
                                                             "ML_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"OPEN_BRACE", "ASSIGN_OP", "CLOSE_BRACE", "STAT_END", "OPEN_ANGLE", "CLOSE_ANGLE", 
		"OPEN_SQUARE", "CLOSE_SQUARE", "COMMA_SEP", "SCOPE_OP", "COLON_SEP", "OPEN_PAREN", 
		"CLOSE_PAREN", "MINUS_OP", "DOT_OP", "MODULE_KW", "TYPEDEF_KW", "CONST_KW", 
		"ENUM_KW", "OCTET_KW", "UNSIGNED_KW", "SHORT_KW", "LONG_KW", "FLOAT_KW", 
		"DOUBLE_KW", "STRING_KW", "SEQUENCE_KW", "STRUCT_KW", "VALUETYPE_KW", 
		"UNION_KW", "SWITCH_KW", "CASE_KW", "BOOLEAN_KW", "CHAR_KW", "BOOLEAN_TRUE", 
		"BOOLEAN_FALSE", "DEFAULT_KW", "IDENTIFIER", "NATURAL_NUMBER", "HEXADECIMAL_LITERAL", 
		"OCTAL_LITERAL", "DIGIT_SEQUENCE", "REAL_NUMBER", "STRING_LITERAL", "CHAR_LITERAL", 
		"FLOAT_EXP_PREFIX", "FIXED_PT_SUFFIX", "WS", "SL_COMMENT", "ML_COMMENT", 
		"ESC_CHAR", "ESC_OCTAL", "OCTAL_CHAR_VAL", "OCTAL_DIGIT", "ESC_HEX", "HEX_CHAR_VAL", 
		"ESC_UNICODE", "UNICODE_CHAR_VAL", "NUMERIC_DIGIT", "NATURAL_DIGIT", "HEX_DIGIT", 
		"CHAR_SINGLE",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, DdsJsIdlLexer._ATN, DdsJsIdlLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "DdsJsIdl.g4"; }

	public get literalNames(): (string | null)[] { return DdsJsIdlLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return DdsJsIdlLexer.symbolicNames; }
	public get ruleNames(): string[] { return DdsJsIdlLexer.ruleNames; }

	public get serializedATN(): number[] { return DdsJsIdlLexer._serializedATN; }

	public get channelNames(): string[] { return DdsJsIdlLexer.channelNames; }

	public get modeNames(): string[] { return DdsJsIdlLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,50,489,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,
	6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,
	14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
	1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,
	19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,
	1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,
	23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,
	1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
	27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,
	1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,
	31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,
	1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,
	36,1,36,1,36,1,36,1,36,1,37,1,37,5,37,307,8,37,10,37,12,37,310,9,37,3,37,
	312,8,37,1,38,1,38,5,38,316,8,38,10,38,12,38,319,9,38,1,39,1,39,1,39,1,
	39,4,39,325,8,39,11,39,12,39,326,1,40,1,40,5,40,331,8,40,10,40,12,40,334,
	9,40,1,41,4,41,337,8,41,11,41,12,41,338,1,42,4,42,342,8,42,11,42,12,42,
	343,1,42,1,42,4,42,348,8,42,11,42,12,42,349,1,42,1,42,4,42,354,8,42,11,
	42,12,42,355,3,42,358,8,42,1,43,1,43,5,43,362,8,43,10,43,12,43,365,9,43,
	1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,47,4,47,378,8,47,11,
	47,12,47,379,1,47,1,47,1,48,1,48,1,48,1,48,5,48,388,8,48,10,48,12,48,391,
	9,48,1,48,3,48,394,8,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,5,49,404,
	8,49,10,49,12,49,407,9,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,431,
	8,50,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,444,8,
	52,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,3,55,458,
	8,55,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,
	57,1,57,1,57,1,57,1,57,3,57,478,8,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,
	1,61,3,61,488,8,61,3,363,389,405,0,62,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
	8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
	41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
	65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
	89,45,91,46,93,47,95,48,97,49,99,50,101,0,103,0,105,0,107,0,109,0,111,0,
	113,0,115,0,117,0,119,0,121,0,123,0,1,0,10,2,0,65,90,97,122,4,0,48,57,65,
	90,95,95,97,122,3,0,48,57,65,70,97,102,1,0,48,55,1,0,48,57,2,0,69,69,101,
	101,2,0,68,68,100,100,3,0,9,10,13,13,32,32,1,0,49,57,3,0,8,8,10,10,12,13,
	501,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
	0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
	0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
	0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
	0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
	0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,
	0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,
	0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
	0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,
	0,0,0,1,125,1,0,0,0,3,127,1,0,0,0,5,129,1,0,0,0,7,131,1,0,0,0,9,133,1,0,
	0,0,11,135,1,0,0,0,13,137,1,0,0,0,15,139,1,0,0,0,17,141,1,0,0,0,19,143,
	1,0,0,0,21,146,1,0,0,0,23,148,1,0,0,0,25,150,1,0,0,0,27,152,1,0,0,0,29,
	154,1,0,0,0,31,156,1,0,0,0,33,163,1,0,0,0,35,171,1,0,0,0,37,177,1,0,0,0,
	39,182,1,0,0,0,41,188,1,0,0,0,43,197,1,0,0,0,45,203,1,0,0,0,47,208,1,0,
	0,0,49,214,1,0,0,0,51,221,1,0,0,0,53,228,1,0,0,0,55,237,1,0,0,0,57,244,
	1,0,0,0,59,254,1,0,0,0,61,260,1,0,0,0,63,267,1,0,0,0,65,272,1,0,0,0,67,
	280,1,0,0,0,69,285,1,0,0,0,71,290,1,0,0,0,73,296,1,0,0,0,75,304,1,0,0,0,
	77,313,1,0,0,0,79,320,1,0,0,0,81,328,1,0,0,0,83,336,1,0,0,0,85,341,1,0,
	0,0,87,359,1,0,0,0,89,368,1,0,0,0,91,372,1,0,0,0,93,374,1,0,0,0,95,377,
	1,0,0,0,97,383,1,0,0,0,99,399,1,0,0,0,101,430,1,0,0,0,103,432,1,0,0,0,105,
	443,1,0,0,0,107,445,1,0,0,0,109,447,1,0,0,0,111,457,1,0,0,0,113,459,1,0,
	0,0,115,477,1,0,0,0,117,479,1,0,0,0,119,481,1,0,0,0,121,483,1,0,0,0,123,
	487,1,0,0,0,125,126,5,123,0,0,126,2,1,0,0,0,127,128,5,61,0,0,128,4,1,0,
	0,0,129,130,5,125,0,0,130,6,1,0,0,0,131,132,5,59,0,0,132,8,1,0,0,0,133,
	134,5,60,0,0,134,10,1,0,0,0,135,136,5,62,0,0,136,12,1,0,0,0,137,138,5,91,
	0,0,138,14,1,0,0,0,139,140,5,93,0,0,140,16,1,0,0,0,141,142,5,44,0,0,142,
	18,1,0,0,0,143,144,5,58,0,0,144,145,5,58,0,0,145,20,1,0,0,0,146,147,5,58,
	0,0,147,22,1,0,0,0,148,149,5,40,0,0,149,24,1,0,0,0,150,151,5,41,0,0,151,
	26,1,0,0,0,152,153,5,45,0,0,153,28,1,0,0,0,154,155,5,46,0,0,155,30,1,0,
	0,0,156,157,5,109,0,0,157,158,5,111,0,0,158,159,5,100,0,0,159,160,5,117,
	0,0,160,161,5,108,0,0,161,162,5,101,0,0,162,32,1,0,0,0,163,164,5,116,0,
	0,164,165,5,121,0,0,165,166,5,112,0,0,166,167,5,101,0,0,167,168,5,100,0,
	0,168,169,5,101,0,0,169,170,5,102,0,0,170,34,1,0,0,0,171,172,5,99,0,0,172,
	173,5,111,0,0,173,174,5,110,0,0,174,175,5,115,0,0,175,176,5,116,0,0,176,
	36,1,0,0,0,177,178,5,101,0,0,178,179,5,110,0,0,179,180,5,117,0,0,180,181,
	5,109,0,0,181,38,1,0,0,0,182,183,5,111,0,0,183,184,5,99,0,0,184,185,5,116,
	0,0,185,186,5,101,0,0,186,187,5,116,0,0,187,40,1,0,0,0,188,189,5,117,0,
	0,189,190,5,110,0,0,190,191,5,115,0,0,191,192,5,105,0,0,192,193,5,103,0,
	0,193,194,5,110,0,0,194,195,5,101,0,0,195,196,5,100,0,0,196,42,1,0,0,0,
	197,198,5,115,0,0,198,199,5,104,0,0,199,200,5,111,0,0,200,201,5,114,0,0,
	201,202,5,116,0,0,202,44,1,0,0,0,203,204,5,108,0,0,204,205,5,111,0,0,205,
	206,5,110,0,0,206,207,5,103,0,0,207,46,1,0,0,0,208,209,5,102,0,0,209,210,
	5,108,0,0,210,211,5,111,0,0,211,212,5,97,0,0,212,213,5,116,0,0,213,48,1,
	0,0,0,214,215,5,100,0,0,215,216,5,111,0,0,216,217,5,117,0,0,217,218,5,98,
	0,0,218,219,5,108,0,0,219,220,5,101,0,0,220,50,1,0,0,0,221,222,5,115,0,
	0,222,223,5,116,0,0,223,224,5,114,0,0,224,225,5,105,0,0,225,226,5,110,0,
	0,226,227,5,103,0,0,227,52,1,0,0,0,228,229,5,115,0,0,229,230,5,101,0,0,
	230,231,5,113,0,0,231,232,5,117,0,0,232,233,5,101,0,0,233,234,5,110,0,0,
	234,235,5,99,0,0,235,236,5,101,0,0,236,54,1,0,0,0,237,238,5,115,0,0,238,
	239,5,116,0,0,239,240,5,114,0,0,240,241,5,117,0,0,241,242,5,99,0,0,242,
	243,5,116,0,0,243,56,1,0,0,0,244,245,5,118,0,0,245,246,5,97,0,0,246,247,
	5,108,0,0,247,248,5,117,0,0,248,249,5,101,0,0,249,250,5,116,0,0,250,251,
	5,121,0,0,251,252,5,112,0,0,252,253,5,101,0,0,253,58,1,0,0,0,254,255,5,
	117,0,0,255,256,5,110,0,0,256,257,5,105,0,0,257,258,5,111,0,0,258,259,5,
	110,0,0,259,60,1,0,0,0,260,261,5,115,0,0,261,262,5,119,0,0,262,263,5,105,
	0,0,263,264,5,116,0,0,264,265,5,99,0,0,265,266,5,104,0,0,266,62,1,0,0,0,
	267,268,5,99,0,0,268,269,5,97,0,0,269,270,5,115,0,0,270,271,5,101,0,0,271,
	64,1,0,0,0,272,273,5,98,0,0,273,274,5,111,0,0,274,275,5,111,0,0,275,276,
	5,108,0,0,276,277,5,101,0,0,277,278,5,97,0,0,278,279,5,110,0,0,279,66,1,
	0,0,0,280,281,5,99,0,0,281,282,5,104,0,0,282,283,5,97,0,0,283,284,5,114,
	0,0,284,68,1,0,0,0,285,286,5,84,0,0,286,287,5,82,0,0,287,288,5,85,0,0,288,
	289,5,69,0,0,289,70,1,0,0,0,290,291,5,70,0,0,291,292,5,65,0,0,292,293,5,
	76,0,0,293,294,5,83,0,0,294,295,5,69,0,0,295,72,1,0,0,0,296,297,5,100,0,
	0,297,298,5,101,0,0,298,299,5,102,0,0,299,300,5,97,0,0,300,301,5,117,0,
	0,301,302,5,108,0,0,302,303,5,116,0,0,303,74,1,0,0,0,304,311,7,0,0,0,305,
	307,7,1,0,0,306,305,1,0,0,0,307,310,1,0,0,0,308,306,1,0,0,0,308,309,1,0,
	0,0,309,312,1,0,0,0,310,308,1,0,0,0,311,308,1,0,0,0,311,312,1,0,0,0,312,
	76,1,0,0,0,313,317,3,119,59,0,314,316,3,117,58,0,315,314,1,0,0,0,316,319,
	1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,78,1,0,0,0,319,317,1,0,0,0,
	320,321,5,48,0,0,321,322,5,120,0,0,322,324,1,0,0,0,323,325,7,2,0,0,324,
	323,1,0,0,0,325,326,1,0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,80,1,0,
	0,0,328,332,5,48,0,0,329,331,7,3,0,0,330,329,1,0,0,0,331,334,1,0,0,0,332,
	330,1,0,0,0,332,333,1,0,0,0,333,82,1,0,0,0,334,332,1,0,0,0,335,337,3,117,
	58,0,336,335,1,0,0,0,337,338,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,
	84,1,0,0,0,340,342,7,4,0,0,341,340,1,0,0,0,342,343,1,0,0,0,343,341,1,0,
	0,0,343,344,1,0,0,0,344,345,1,0,0,0,345,347,5,46,0,0,346,348,7,4,0,0,347,
	346,1,0,0,0,348,349,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,357,1,0,
	0,0,351,353,7,5,0,0,352,354,7,4,0,0,353,352,1,0,0,0,354,355,1,0,0,0,355,
	353,1,0,0,0,355,356,1,0,0,0,356,358,1,0,0,0,357,351,1,0,0,0,357,358,1,0,
	0,0,358,86,1,0,0,0,359,363,5,34,0,0,360,362,3,123,61,0,361,360,1,0,0,0,
	362,365,1,0,0,0,363,364,1,0,0,0,363,361,1,0,0,0,364,366,1,0,0,0,365,363,
	1,0,0,0,366,367,5,34,0,0,367,88,1,0,0,0,368,369,5,39,0,0,369,370,3,123,
	61,0,370,371,5,39,0,0,371,90,1,0,0,0,372,373,7,5,0,0,373,92,1,0,0,0,374,
	375,7,6,0,0,375,94,1,0,0,0,376,378,7,7,0,0,377,376,1,0,0,0,378,379,1,0,
	0,0,379,377,1,0,0,0,379,380,1,0,0,0,380,381,1,0,0,0,381,382,6,47,0,0,382,
	96,1,0,0,0,383,384,5,47,0,0,384,385,5,47,0,0,385,389,1,0,0,0,386,388,9,
	0,0,0,387,386,1,0,0,0,388,391,1,0,0,0,389,390,1,0,0,0,389,387,1,0,0,0,390,
	393,1,0,0,0,391,389,1,0,0,0,392,394,5,13,0,0,393,392,1,0,0,0,393,394,1,
	0,0,0,394,395,1,0,0,0,395,396,5,10,0,0,396,397,1,0,0,0,397,398,6,48,0,0,
	398,98,1,0,0,0,399,400,5,47,0,0,400,401,5,42,0,0,401,405,1,0,0,0,402,404,
	9,0,0,0,403,402,1,0,0,0,404,407,1,0,0,0,405,406,1,0,0,0,405,403,1,0,0,0,
	406,408,1,0,0,0,407,405,1,0,0,0,408,409,5,42,0,0,409,410,5,47,0,0,410,411,
	1,0,0,0,411,412,6,49,0,0,412,100,1,0,0,0,413,414,5,92,0,0,414,415,5,91,
	0,0,415,416,5,97,0,0,416,417,5,98,0,0,417,418,5,102,0,0,418,419,5,110,0,
	0,419,420,5,114,0,0,420,421,5,116,0,0,421,422,5,118,0,0,422,423,5,92,0,
	0,423,424,5,63,0,0,424,425,5,39,0,0,425,426,5,34,0,0,426,431,5,93,0,0,427,
	431,3,103,51,0,428,431,3,109,54,0,429,431,3,113,56,0,430,413,1,0,0,0,430,
	427,1,0,0,0,430,428,1,0,0,0,430,429,1,0,0,0,431,102,1,0,0,0,432,433,5,92,
	0,0,433,434,3,105,52,0,434,104,1,0,0,0,435,444,3,107,53,0,436,437,3,107,
	53,0,437,438,3,107,53,0,438,444,1,0,0,0,439,440,3,107,53,0,440,441,3,107,
	53,0,441,442,3,107,53,0,442,444,1,0,0,0,443,435,1,0,0,0,443,436,1,0,0,0,
	443,439,1,0,0,0,444,106,1,0,0,0,445,446,7,3,0,0,446,108,1,0,0,0,447,448,
	5,92,0,0,448,449,5,48,0,0,449,450,5,120,0,0,450,451,1,0,0,0,451,452,3,111,
	55,0,452,110,1,0,0,0,453,458,3,121,60,0,454,455,3,121,60,0,455,456,3,121,
	60,0,456,458,1,0,0,0,457,453,1,0,0,0,457,454,1,0,0,0,458,112,1,0,0,0,459,
	460,5,92,0,0,460,461,5,117,0,0,461,462,1,0,0,0,462,463,3,115,57,0,463,114,
	1,0,0,0,464,478,3,121,60,0,465,466,3,121,60,0,466,467,3,121,60,0,467,478,
	1,0,0,0,468,469,3,121,60,0,469,470,3,121,60,0,470,471,3,121,60,0,471,478,
	1,0,0,0,472,473,3,121,60,0,473,474,3,121,60,0,474,475,3,121,60,0,475,476,
	3,121,60,0,476,478,1,0,0,0,477,464,1,0,0,0,477,465,1,0,0,0,477,468,1,0,
	0,0,477,472,1,0,0,0,478,116,1,0,0,0,479,480,7,4,0,0,480,118,1,0,0,0,481,
	482,7,8,0,0,482,120,1,0,0,0,483,484,7,2,0,0,484,122,1,0,0,0,485,488,3,101,
	50,0,486,488,8,9,0,0,487,485,1,0,0,0,487,486,1,0,0,0,488,124,1,0,0,0,21,
	0,308,311,317,326,332,338,343,349,355,357,363,379,389,393,405,430,443,457,
	477,487,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!DdsJsIdlLexer.__ATN) {
			DdsJsIdlLexer.__ATN = new ATNDeserializer().deserialize(DdsJsIdlLexer._serializedATN);
		}

		return DdsJsIdlLexer.__ATN;
	}


	static DecisionsToDFA = DdsJsIdlLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}