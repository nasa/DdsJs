/**
 * \file {{headerFile.headerFileName}}
 * \brief Contains the definition of the \c {{name}} class.
 * \node Automatically-generated code.
 * \date {{headerFile.createDate}}
 */

#ifndef {{headerFile.includeGuard}}
#define {{headerFile.includeGuard}}

//
// NodeJs Add-on API
#include <napi.h>

//
// DdsJs Generic
#include <DdsJs/DdsJs.hh>

//
// DdsJs {{providerName}}-Specific
#include <DdsJs/Providers/{{providerName}}/{{providerName}}.hh>

{{#if providerHeaders}}
//
// {{providerName}} Generated Definitions
{{#each providerHeaders}}
#include <{{.}}>
{{/each}}

{{/if}}
{{#each owner.namespaceStack}}
namespace {{this}}
{

{{/each}}
class {{name}}
{
public:
    using CppEntity = {{idlName}};
    using NapiContainer = {{napiContainerName}};

    static const char *NAME;

    static Napi::Object Init(Napi::Env env, Napi::Object exports);

    static NapiContainer NewInstance(Napi::Env env);

    static NapiContainer NewInstance(Napi::Env env, CppEntity const& cppInstance);

    static void FromCpp(Napi::Env env, CppEntity const& cppVal, NapiContainer& jsValOut);

    static void FromJs(Napi::Env env, NapiContainer const& jsVal, CppEntity& cppValOut);
};

{{#itemsInReverse owner.namespaceStack}}
} // end namespace {{this}}

{{/itemsInReverse}}
#endif /* !{{headerFile.includeGuard}} */

// vim: set ts=4 sw=4 expandtab:
