/**
 * \file {{headerFile.headerFileName}}
 * \brief Contains the definition of the \c {{name}} class.
 * \note Automatically-generated code.
 * \date {{headerFile.createDate}}
 */

#ifndef {{headerFile.includeGuard}}
#define {{headerFile.includeGuard}}

{{#if providerHeader}}
//
// DDS Provider Header
#include <{{providerHeader}}>
{{/if}}

//
// Library Headers
#include <napi.h>
#include <DdsJs/ddsjs.hh>

{{#if headerFile.proxyTypeHeader}}
//
// Module Headers
#include <{{headerFile.proxyTypeHeader}}>

{{/if}}
{{#each owner.namespaceStack}}
namespace {{this}}
{

{{/each}}
class {{name}} : public {{{baseWrapperName}}}, public ::Napi::ObjectWrap< {{name}} >
{
public:
    static const char *MODNAME;
    
    static const char *NAME;

    static ::Napi::Object Init(::Napi::Env env, ::Napi::Object exports, ::DdsJs::ConstructorRegistry *ctorReg);

    {{name}}(::Napi::CallbackInfo const& info);

    virtual ~{{name}}() = default;

    virtual const char* modname() const;

    virtual const char* name() const;
};

{{#itemsInReverse owner.namespaceStack}}
} // end namespace {{this}}

{{/itemsInReverse}}

#endif /* !{{headerFile.includeGuard}} */

// vim: set ts=4 sw=4 expandtab:
