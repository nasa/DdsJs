/**
 * \file {{headerFile.headerFileName}}
 * \brief Contains the definition of the \c {{name}} class.
 * \note Automatically-generated code.
 * \date {{headerFile.createDate}}
 */

#ifndef {{headerFile.includeGuard}}
#define {{headerFile.includeGuard}}

{{#if providerHeaders}}
//
// DDS Provider Header(s)
{{#each providerHeaders}}
#include <{{.}}>
{{/each}}
{{/if}}

//
// NodeJs Add-on API
#include <napi.h>

//
// DdsJs Generic
#include <DdsJs/DdsJs.hh>

//
// DdsJs {{providerName}}-Specific
#include <DdsJs/Providers/{{providerName}}/{{providerName}}.hh>

{{#if providerHeaders}}
//
// {{providerName}} Generated Definitions
{{#each providerHeaders}}
#include <{{.}}>
{{/each}}

{{/if}}
{{#each owner.namespaceStack}}
namespace {{this}}
{

{{/each}}

class {{name}} : public {{{baseWrapperName}}}, public ::Napi::ObjectWrap< {{name}} >
{
public:
    static const char *MODNAME;
    
    static const char *NAME;

    static ::Napi::Object Init(::Napi::Env env, ::Napi::Object exports, ::DdsJs::ConstructorRegistry *ctorReg);

    {{name}}(::Napi::CallbackInfo const& info);

    virtual ~{{name}}() = default;
};

{{#itemsInReverse owner.namespaceStack}}
} // end namespace {{this}}

{{/itemsInReverse}}

#endif /* !{{headerFile.includeGuard}} */

// vim: set ts=4 sw=4 expandtab:
