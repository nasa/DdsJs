// Generated from /Users/rnieves/Documents/Projects/dds-idl-compiler/src/DdsIdl.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class DdsIdlLexer extends Lexer {
	public static readonly KW_ANNOTATION = 1;
	public static readonly KW_BITFIELD = 2;
	public static readonly KW_BITMASK = 3;
	public static readonly KW_BITSET = 4;
	public static readonly KW_BOOLEAN = 5;
	public static readonly KW_CASE = 6;
	public static readonly KW_CHAR = 7;
	public static readonly KW_CONST = 8;
	public static readonly KW_DEFAULT = 9;
	public static readonly KW_DOUBLE = 10;
	public static readonly KW_ENUM = 11;
	public static readonly KW_FIXED = 12;
	public static readonly KW_FLOAT = 13;
	public static readonly KW_INT16 = 14;
	public static readonly KW_INT32 = 15;
	public static readonly KW_INT64 = 16;
	public static readonly KW_INT8 = 17;
	public static readonly KW_LONG = 18;
	public static readonly KW_MAP = 19;
	public static readonly KW_MODULE = 20;
	public static readonly KW_OCTET = 21;
	public static readonly KW_SEQUENCE = 22;
	public static readonly KW_SHORT = 23;
	public static readonly KW_STRING = 24;
	public static readonly KW_STRUCT = 25;
	public static readonly KW_SWITCH = 26;
	public static readonly KW_TYPEDEF = 27;
	public static readonly KW_UNION = 28;
	public static readonly KW_UINT16 = 29;
	public static readonly KW_UINT32 = 30;
	public static readonly KW_UINT64 = 31;
	public static readonly KW_UINT8 = 32;
	public static readonly KW_UNSIGNED = 33;
	public static readonly KW_WCHAR = 34;
	public static readonly KW_WSTRING = 35;
	public static readonly ID = 36;
	public static readonly SL_COMMENT = 37;
	public static readonly ML_COMMENT = 38;
	public static readonly FLOATING_PT_LITERAL = 39;
	public static readonly HEX_LITERAL = 40;
	public static readonly INTEGER_LITERAL = 41;
	public static readonly OCTAL_LITERAL = 42;
	public static readonly BOOLEAN_LITERAL = 43;
	public static readonly WIDE_CHARACTER_LITERAL = 44;
	public static readonly CHARACTER_LITERAL = 45;
	public static readonly WIDE_STRING_LITERAL = 46;
	public static readonly STRING_LITERAL = 47;
	public static readonly AMPERSAND = 48;
	public static readonly ASTERISK = 49;
	public static readonly AT = 50;
	public static readonly CARET = 51;
	public static readonly COLON = 52;
	public static readonly COMMA = 53;
	public static readonly DOUBLE_SLASH = 54;
	public static readonly EQUALS = 55;
	public static readonly FORWARD_SLASH = 56;
	public static readonly LEFT_ANGLE = 57;
	public static readonly LEFT_BRACE = 58;
	public static readonly LEFT_BRACKET = 59;
	public static readonly LEFT_PAREN = 60;
	public static readonly LEFT_SHIFT = 61;
	public static readonly MINUS = 62;
	public static readonly PERCENT = 63;
	public static readonly PLUS = 64;
	public static readonly RIGHT_ANGLE = 65;
	public static readonly RIGHT_BRACE = 66;
	public static readonly RIGHT_BRACKET = 67;
	public static readonly RIGHT_PAREN = 68;
	public static readonly RIGHT_SHIFT = 69;
	public static readonly SCOPE_SEP = 70;
	public static readonly SEMICOLON = 71;
	public static readonly SLASH_STAR = 72;
	public static readonly STAR_SLASH = 73;
	public static readonly TILDE = 74;
	public static readonly VERT_BAR = 75;
	public static readonly WS = 76;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'@annotation'", 
                                                            "'bitfield'", 
                                                            "'bitmask'", 
                                                            "'bitset'", 
                                                            "'boolean'", 
                                                            "'case'", "'char'", 
                                                            "'const'", "'default'", 
                                                            "'double'", 
                                                            "'enum'", "'fixed'", 
                                                            "'float'", "'int16'", 
                                                            "'int32'", "'int64'", 
                                                            "'int8'", "'long'", 
                                                            "'map'", "'module'", 
                                                            "'octet'", "'sequence'", 
                                                            "'short'", "'string'", 
                                                            "'struct'", 
                                                            "'switch'", 
                                                            "'typedef'", 
                                                            "'union'", "'uint16'", 
                                                            "'uint32'", 
                                                            "'uint64'", 
                                                            "'uint8'", "'unsigned'", 
                                                            "'wchar'", "'wstring'", 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            "'&'", "'*'", 
                                                            "'@'", "'^'", 
                                                            "':'", "','", 
                                                            "'//'", "'='", 
                                                            "'/'", "'<'", 
                                                            "'{'", "'['", 
                                                            "'('", "'<<'", 
                                                            "'-'", "'%'", 
                                                            "'+'", "'>'", 
                                                            "'}'", "']'", 
                                                            "')'", "'>>'", 
                                                            "'::'", "';'", 
                                                            "'/*'", "'*/'", 
                                                            "'~'", "'|'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "KW_ANNOTATION", 
                                                             "KW_BITFIELD", 
                                                             "KW_BITMASK", 
                                                             "KW_BITSET", 
                                                             "KW_BOOLEAN", 
                                                             "KW_CASE", 
                                                             "KW_CHAR", 
                                                             "KW_CONST", 
                                                             "KW_DEFAULT", 
                                                             "KW_DOUBLE", 
                                                             "KW_ENUM", 
                                                             "KW_FIXED", 
                                                             "KW_FLOAT", 
                                                             "KW_INT16", 
                                                             "KW_INT32", 
                                                             "KW_INT64", 
                                                             "KW_INT8", 
                                                             "KW_LONG", 
                                                             "KW_MAP", "KW_MODULE", 
                                                             "KW_OCTET", 
                                                             "KW_SEQUENCE", 
                                                             "KW_SHORT", 
                                                             "KW_STRING", 
                                                             "KW_STRUCT", 
                                                             "KW_SWITCH", 
                                                             "KW_TYPEDEF", 
                                                             "KW_UNION", 
                                                             "KW_UINT16", 
                                                             "KW_UINT32", 
                                                             "KW_UINT64", 
                                                             "KW_UINT8", 
                                                             "KW_UNSIGNED", 
                                                             "KW_WCHAR", 
                                                             "KW_WSTRING", 
                                                             "ID", "SL_COMMENT", 
                                                             "ML_COMMENT", 
                                                             "FLOATING_PT_LITERAL", 
                                                             "HEX_LITERAL", 
                                                             "INTEGER_LITERAL", 
                                                             "OCTAL_LITERAL", 
                                                             "BOOLEAN_LITERAL", 
                                                             "WIDE_CHARACTER_LITERAL", 
                                                             "CHARACTER_LITERAL", 
                                                             "WIDE_STRING_LITERAL", 
                                                             "STRING_LITERAL", 
                                                             "AMPERSAND", 
                                                             "ASTERISK", 
                                                             "AT", "CARET", 
                                                             "COLON", "COMMA", 
                                                             "DOUBLE_SLASH", 
                                                             "EQUALS", "FORWARD_SLASH", 
                                                             "LEFT_ANGLE", 
                                                             "LEFT_BRACE", 
                                                             "LEFT_BRACKET", 
                                                             "LEFT_PAREN", 
                                                             "LEFT_SHIFT", 
                                                             "MINUS", "PERCENT", 
                                                             "PLUS", "RIGHT_ANGLE", 
                                                             "RIGHT_BRACE", 
                                                             "RIGHT_BRACKET", 
                                                             "RIGHT_PAREN", 
                                                             "RIGHT_SHIFT", 
                                                             "SCOPE_SEP", 
                                                             "SEMICOLON", 
                                                             "SLASH_STAR", 
                                                             "STAR_SLASH", 
                                                             "TILDE", "VERT_BAR", 
                                                             "WS" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"KW_ANNOTATION", "KW_BITFIELD", "KW_BITMASK", "KW_BITSET", "KW_BOOLEAN", 
		"KW_CASE", "KW_CHAR", "KW_CONST", "KW_DEFAULT", "KW_DOUBLE", "KW_ENUM", 
		"KW_FIXED", "KW_FLOAT", "KW_INT16", "KW_INT32", "KW_INT64", "KW_INT8", 
		"KW_LONG", "KW_MAP", "KW_MODULE", "KW_OCTET", "KW_SEQUENCE", "KW_SHORT", 
		"KW_STRING", "KW_STRUCT", "KW_SWITCH", "KW_TYPEDEF", "KW_UNION", "KW_UINT16", 
		"KW_UINT32", "KW_UINT64", "KW_UINT8", "KW_UNSIGNED", "KW_WCHAR", "KW_WSTRING", 
		"ID", "SL_COMMENT", "ML_COMMENT", "FLOATING_PT_LITERAL", "HEX_LITERAL", 
		"INTEGER_LITERAL", "OCTAL_LITERAL", "EXPONENT", "INTEGER_TYPE_SUFFIX", 
		"FLOAT_TYPE_SUFFIX", "BOOLEAN_LITERAL", "WIDE_CHARACTER_LITERAL", "CHARACTER_LITERAL", 
		"WIDE_STRING_LITERAL", "STRING_LITERAL", "ESCAPE_SEQUENCE", "UNICODE_ESCAPE", 
		"OCTAL_ESCAPE", "LETTER", "ID_DIGIT", "HEX_DIGIT", "AMPERSAND", "ASTERISK", 
		"AT", "CARET", "COLON", "COMMA", "DOUBLE_SLASH", "EQUALS", "FORWARD_SLASH", 
		"LEFT_ANGLE", "LEFT_BRACE", "LEFT_BRACKET", "LEFT_PAREN", "LEFT_SHIFT", 
		"MINUS", "PERCENT", "PLUS", "RIGHT_ANGLE", "RIGHT_BRACE", "RIGHT_BRACKET", 
		"RIGHT_PAREN", "RIGHT_SHIFT", "SCOPE_SEP", "SEMICOLON", "SLASH_STAR", 
		"STAR_SLASH", "TILDE", "VERT_BAR", "WS",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, DdsIdlLexer._ATN, DdsIdlLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "DdsIdl.g4"; }

	public get literalNames(): (string | null)[] { return DdsIdlLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return DdsIdlLexer.symbolicNames; }
	public get ruleNames(): string[] { return DdsIdlLexer.ruleNames; }

	public get serializedATN(): number[] { return DdsIdlLexer._serializedATN; }

	public get channelNames(): string[] { return DdsIdlLexer.channelNames; }

	public get modeNames(): string[] { return DdsIdlLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,76,670,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
	0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
	2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,
	5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
	8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,
	1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,
	13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,
	1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
	19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,
	23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
	1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,
	27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
	1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,
	31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
	1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,5,
	35,412,8,35,10,35,12,35,415,9,35,1,36,1,36,5,36,419,8,36,10,36,12,36,422,
	9,36,1,36,3,36,425,8,36,1,36,1,36,1,36,1,36,1,37,1,37,5,37,433,8,37,10,
	37,12,37,436,9,37,1,37,1,37,1,37,1,37,1,38,4,38,443,8,38,11,38,12,38,444,
	1,38,1,38,5,38,449,8,38,10,38,12,38,452,9,38,1,38,3,38,455,8,38,1,38,3,
	38,458,8,38,1,38,1,38,4,38,462,8,38,11,38,12,38,463,1,38,3,38,467,8,38,
	1,38,3,38,470,8,38,1,38,4,38,473,8,38,11,38,12,38,474,1,38,1,38,3,38,479,
	8,38,1,38,4,38,482,8,38,11,38,12,38,483,1,38,3,38,487,8,38,1,38,3,38,490,
	8,38,1,39,1,39,1,39,4,39,495,8,39,11,39,12,39,496,1,39,3,39,500,8,39,1,
	40,1,40,1,40,5,40,505,8,40,10,40,12,40,508,9,40,3,40,510,8,40,1,40,3,40,
	513,8,40,1,41,1,41,4,41,517,8,41,11,41,12,41,518,1,41,3,41,522,8,41,1,42,
	1,42,1,42,3,42,527,8,42,1,42,4,42,530,8,42,11,42,12,42,531,1,43,1,43,1,
	44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,547,8,45,1,46,
	1,46,1,46,1,47,1,47,1,47,3,47,555,8,47,1,47,1,47,1,48,1,48,1,48,1,49,1,
	49,1,49,5,49,565,8,49,10,49,12,49,568,9,49,1,49,1,49,1,50,1,50,1,50,1,50,
	3,50,576,8,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,
	52,1,52,1,52,1,52,1,52,3,52,594,8,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,
	1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,62,1,
	63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,69,
	1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,
	77,1,77,1,77,1,78,1,78,1,78,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,82,
	1,82,1,83,1,83,1,84,4,84,665,8,84,11,84,12,84,666,1,84,1,84,2,420,434,0,
	85,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
	29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
	53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
	77,39,79,40,81,41,83,42,85,0,87,0,89,0,91,43,93,44,95,45,97,46,99,47,101,
	0,103,0,105,0,107,0,109,0,111,0,113,48,115,49,117,50,119,51,121,52,123,
	53,125,54,127,55,129,56,131,57,133,58,135,59,137,60,139,61,141,62,143,63,
	145,64,147,65,149,66,151,67,153,68,155,69,157,70,159,71,161,72,163,73,165,
	74,167,75,169,76,1,0,11,2,0,88,88,120,120,2,0,69,69,101,101,2,0,76,76,108,
	108,4,0,68,68,70,70,100,100,102,102,2,0,39,39,92,92,2,0,34,34,92,92,8,0,
	34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,12,0,36,36,65,90,
	95,95,97,122,192,214,216,246,248,8191,12352,12687,13056,13183,13312,15661,
	19968,40959,63744,64255,15,0,48,57,1632,1641,1776,1785,2406,2415,2534,2543,
	2662,2671,2790,2799,2918,2927,3047,3055,3174,3183,3302,3311,3430,3439,3664,
	3673,3792,3801,4160,4169,3,0,48,57,65,70,97,102,3,0,9,10,13,13,32,32,698,
	0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
	0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
	1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
	0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
	1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
	0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
	1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
	0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
	1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,
	0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,
	0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,
	0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,
	149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,
	1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,
	0,0,0,1,171,1,0,0,0,3,183,1,0,0,0,5,192,1,0,0,0,7,200,1,0,0,0,9,207,1,0,
	0,0,11,215,1,0,0,0,13,220,1,0,0,0,15,225,1,0,0,0,17,231,1,0,0,0,19,239,
	1,0,0,0,21,246,1,0,0,0,23,251,1,0,0,0,25,257,1,0,0,0,27,263,1,0,0,0,29,
	269,1,0,0,0,31,275,1,0,0,0,33,281,1,0,0,0,35,286,1,0,0,0,37,291,1,0,0,0,
	39,295,1,0,0,0,41,302,1,0,0,0,43,308,1,0,0,0,45,317,1,0,0,0,47,323,1,0,
	0,0,49,330,1,0,0,0,51,337,1,0,0,0,53,344,1,0,0,0,55,352,1,0,0,0,57,358,
	1,0,0,0,59,365,1,0,0,0,61,372,1,0,0,0,63,379,1,0,0,0,65,385,1,0,0,0,67,
	394,1,0,0,0,69,400,1,0,0,0,71,408,1,0,0,0,73,416,1,0,0,0,75,430,1,0,0,0,
	77,489,1,0,0,0,79,491,1,0,0,0,81,509,1,0,0,0,83,514,1,0,0,0,85,523,1,0,
	0,0,87,533,1,0,0,0,89,535,1,0,0,0,91,546,1,0,0,0,93,548,1,0,0,0,95,551,
	1,0,0,0,97,558,1,0,0,0,99,561,1,0,0,0,101,575,1,0,0,0,103,577,1,0,0,0,105,
	593,1,0,0,0,107,595,1,0,0,0,109,597,1,0,0,0,111,599,1,0,0,0,113,601,1,0,
	0,0,115,603,1,0,0,0,117,605,1,0,0,0,119,607,1,0,0,0,121,609,1,0,0,0,123,
	611,1,0,0,0,125,613,1,0,0,0,127,616,1,0,0,0,129,618,1,0,0,0,131,620,1,0,
	0,0,133,622,1,0,0,0,135,624,1,0,0,0,137,626,1,0,0,0,139,628,1,0,0,0,141,
	631,1,0,0,0,143,633,1,0,0,0,145,635,1,0,0,0,147,637,1,0,0,0,149,639,1,0,
	0,0,151,641,1,0,0,0,153,643,1,0,0,0,155,645,1,0,0,0,157,648,1,0,0,0,159,
	651,1,0,0,0,161,653,1,0,0,0,163,656,1,0,0,0,165,659,1,0,0,0,167,661,1,0,
	0,0,169,664,1,0,0,0,171,172,5,64,0,0,172,173,5,97,0,0,173,174,5,110,0,0,
	174,175,5,110,0,0,175,176,5,111,0,0,176,177,5,116,0,0,177,178,5,97,0,0,
	178,179,5,116,0,0,179,180,5,105,0,0,180,181,5,111,0,0,181,182,5,110,0,0,
	182,2,1,0,0,0,183,184,5,98,0,0,184,185,5,105,0,0,185,186,5,116,0,0,186,
	187,5,102,0,0,187,188,5,105,0,0,188,189,5,101,0,0,189,190,5,108,0,0,190,
	191,5,100,0,0,191,4,1,0,0,0,192,193,5,98,0,0,193,194,5,105,0,0,194,195,
	5,116,0,0,195,196,5,109,0,0,196,197,5,97,0,0,197,198,5,115,0,0,198,199,
	5,107,0,0,199,6,1,0,0,0,200,201,5,98,0,0,201,202,5,105,0,0,202,203,5,116,
	0,0,203,204,5,115,0,0,204,205,5,101,0,0,205,206,5,116,0,0,206,8,1,0,0,0,
	207,208,5,98,0,0,208,209,5,111,0,0,209,210,5,111,0,0,210,211,5,108,0,0,
	211,212,5,101,0,0,212,213,5,97,0,0,213,214,5,110,0,0,214,10,1,0,0,0,215,
	216,5,99,0,0,216,217,5,97,0,0,217,218,5,115,0,0,218,219,5,101,0,0,219,12,
	1,0,0,0,220,221,5,99,0,0,221,222,5,104,0,0,222,223,5,97,0,0,223,224,5,114,
	0,0,224,14,1,0,0,0,225,226,5,99,0,0,226,227,5,111,0,0,227,228,5,110,0,0,
	228,229,5,115,0,0,229,230,5,116,0,0,230,16,1,0,0,0,231,232,5,100,0,0,232,
	233,5,101,0,0,233,234,5,102,0,0,234,235,5,97,0,0,235,236,5,117,0,0,236,
	237,5,108,0,0,237,238,5,116,0,0,238,18,1,0,0,0,239,240,5,100,0,0,240,241,
	5,111,0,0,241,242,5,117,0,0,242,243,5,98,0,0,243,244,5,108,0,0,244,245,
	5,101,0,0,245,20,1,0,0,0,246,247,5,101,0,0,247,248,5,110,0,0,248,249,5,
	117,0,0,249,250,5,109,0,0,250,22,1,0,0,0,251,252,5,102,0,0,252,253,5,105,
	0,0,253,254,5,120,0,0,254,255,5,101,0,0,255,256,5,100,0,0,256,24,1,0,0,
	0,257,258,5,102,0,0,258,259,5,108,0,0,259,260,5,111,0,0,260,261,5,97,0,
	0,261,262,5,116,0,0,262,26,1,0,0,0,263,264,5,105,0,0,264,265,5,110,0,0,
	265,266,5,116,0,0,266,267,5,49,0,0,267,268,5,54,0,0,268,28,1,0,0,0,269,
	270,5,105,0,0,270,271,5,110,0,0,271,272,5,116,0,0,272,273,5,51,0,0,273,
	274,5,50,0,0,274,30,1,0,0,0,275,276,5,105,0,0,276,277,5,110,0,0,277,278,
	5,116,0,0,278,279,5,54,0,0,279,280,5,52,0,0,280,32,1,0,0,0,281,282,5,105,
	0,0,282,283,5,110,0,0,283,284,5,116,0,0,284,285,5,56,0,0,285,34,1,0,0,0,
	286,287,5,108,0,0,287,288,5,111,0,0,288,289,5,110,0,0,289,290,5,103,0,0,
	290,36,1,0,0,0,291,292,5,109,0,0,292,293,5,97,0,0,293,294,5,112,0,0,294,
	38,1,0,0,0,295,296,5,109,0,0,296,297,5,111,0,0,297,298,5,100,0,0,298,299,
	5,117,0,0,299,300,5,108,0,0,300,301,5,101,0,0,301,40,1,0,0,0,302,303,5,
	111,0,0,303,304,5,99,0,0,304,305,5,116,0,0,305,306,5,101,0,0,306,307,5,
	116,0,0,307,42,1,0,0,0,308,309,5,115,0,0,309,310,5,101,0,0,310,311,5,113,
	0,0,311,312,5,117,0,0,312,313,5,101,0,0,313,314,5,110,0,0,314,315,5,99,
	0,0,315,316,5,101,0,0,316,44,1,0,0,0,317,318,5,115,0,0,318,319,5,104,0,
	0,319,320,5,111,0,0,320,321,5,114,0,0,321,322,5,116,0,0,322,46,1,0,0,0,
	323,324,5,115,0,0,324,325,5,116,0,0,325,326,5,114,0,0,326,327,5,105,0,0,
	327,328,5,110,0,0,328,329,5,103,0,0,329,48,1,0,0,0,330,331,5,115,0,0,331,
	332,5,116,0,0,332,333,5,114,0,0,333,334,5,117,0,0,334,335,5,99,0,0,335,
	336,5,116,0,0,336,50,1,0,0,0,337,338,5,115,0,0,338,339,5,119,0,0,339,340,
	5,105,0,0,340,341,5,116,0,0,341,342,5,99,0,0,342,343,5,104,0,0,343,52,1,
	0,0,0,344,345,5,116,0,0,345,346,5,121,0,0,346,347,5,112,0,0,347,348,5,101,
	0,0,348,349,5,100,0,0,349,350,5,101,0,0,350,351,5,102,0,0,351,54,1,0,0,
	0,352,353,5,117,0,0,353,354,5,110,0,0,354,355,5,105,0,0,355,356,5,111,0,
	0,356,357,5,110,0,0,357,56,1,0,0,0,358,359,5,117,0,0,359,360,5,105,0,0,
	360,361,5,110,0,0,361,362,5,116,0,0,362,363,5,49,0,0,363,364,5,54,0,0,364,
	58,1,0,0,0,365,366,5,117,0,0,366,367,5,105,0,0,367,368,5,110,0,0,368,369,
	5,116,0,0,369,370,5,51,0,0,370,371,5,50,0,0,371,60,1,0,0,0,372,373,5,117,
	0,0,373,374,5,105,0,0,374,375,5,110,0,0,375,376,5,116,0,0,376,377,5,54,
	0,0,377,378,5,52,0,0,378,62,1,0,0,0,379,380,5,117,0,0,380,381,5,105,0,0,
	381,382,5,110,0,0,382,383,5,116,0,0,383,384,5,56,0,0,384,64,1,0,0,0,385,
	386,5,117,0,0,386,387,5,110,0,0,387,388,5,115,0,0,388,389,5,105,0,0,389,
	390,5,103,0,0,390,391,5,110,0,0,391,392,5,101,0,0,392,393,5,100,0,0,393,
	66,1,0,0,0,394,395,5,119,0,0,395,396,5,99,0,0,396,397,5,104,0,0,397,398,
	5,97,0,0,398,399,5,114,0,0,399,68,1,0,0,0,400,401,5,119,0,0,401,402,5,115,
	0,0,402,403,5,116,0,0,403,404,5,114,0,0,404,405,5,105,0,0,405,406,5,110,
	0,0,406,407,5,103,0,0,407,70,1,0,0,0,408,413,3,107,53,0,409,412,3,107,53,
	0,410,412,3,109,54,0,411,409,1,0,0,0,411,410,1,0,0,0,412,415,1,0,0,0,413,
	411,1,0,0,0,413,414,1,0,0,0,414,72,1,0,0,0,415,413,1,0,0,0,416,420,3,125,
	62,0,417,419,9,0,0,0,418,417,1,0,0,0,419,422,1,0,0,0,420,421,1,0,0,0,420,
	418,1,0,0,0,421,424,1,0,0,0,422,420,1,0,0,0,423,425,5,13,0,0,424,423,1,
	0,0,0,424,425,1,0,0,0,425,426,1,0,0,0,426,427,5,10,0,0,427,428,1,0,0,0,
	428,429,6,36,0,0,429,74,1,0,0,0,430,434,3,161,80,0,431,433,9,0,0,0,432,
	431,1,0,0,0,433,436,1,0,0,0,434,435,1,0,0,0,434,432,1,0,0,0,435,437,1,0,
	0,0,436,434,1,0,0,0,437,438,3,163,81,0,438,439,1,0,0,0,439,440,6,37,0,0,
	440,76,1,0,0,0,441,443,2,48,57,0,442,441,1,0,0,0,443,444,1,0,0,0,444,442,
	1,0,0,0,444,445,1,0,0,0,445,446,1,0,0,0,446,450,5,46,0,0,447,449,2,48,57,
	0,448,447,1,0,0,0,449,452,1,0,0,0,450,448,1,0,0,0,450,451,1,0,0,0,451,454,
	1,0,0,0,452,450,1,0,0,0,453,455,3,85,42,0,454,453,1,0,0,0,454,455,1,0,0,
	0,455,457,1,0,0,0,456,458,3,89,44,0,457,456,1,0,0,0,457,458,1,0,0,0,458,
	490,1,0,0,0,459,461,5,46,0,0,460,462,2,48,57,0,461,460,1,0,0,0,462,463,
	1,0,0,0,463,461,1,0,0,0,463,464,1,0,0,0,464,466,1,0,0,0,465,467,3,85,42,
	0,466,465,1,0,0,0,466,467,1,0,0,0,467,469,1,0,0,0,468,470,3,89,44,0,469,
	468,1,0,0,0,469,470,1,0,0,0,470,490,1,0,0,0,471,473,2,48,57,0,472,471,1,
	0,0,0,473,474,1,0,0,0,474,472,1,0,0,0,474,475,1,0,0,0,475,476,1,0,0,0,476,
	478,3,85,42,0,477,479,3,89,44,0,478,477,1,0,0,0,478,479,1,0,0,0,479,490,
	1,0,0,0,480,482,2,48,57,0,481,480,1,0,0,0,482,483,1,0,0,0,483,481,1,0,0,
	0,483,484,1,0,0,0,484,486,1,0,0,0,485,487,3,85,42,0,486,485,1,0,0,0,486,
	487,1,0,0,0,487,488,1,0,0,0,488,490,3,89,44,0,489,442,1,0,0,0,489,459,1,
	0,0,0,489,472,1,0,0,0,489,481,1,0,0,0,490,78,1,0,0,0,491,492,5,48,0,0,492,
	494,7,0,0,0,493,495,3,111,55,0,494,493,1,0,0,0,495,496,1,0,0,0,496,494,
	1,0,0,0,496,497,1,0,0,0,497,499,1,0,0,0,498,500,3,87,43,0,499,498,1,0,0,
	0,499,500,1,0,0,0,500,80,1,0,0,0,501,510,5,48,0,0,502,506,2,49,57,0,503,
	505,2,48,57,0,504,503,1,0,0,0,505,508,1,0,0,0,506,504,1,0,0,0,506,507,1,
	0,0,0,507,510,1,0,0,0,508,506,1,0,0,0,509,501,1,0,0,0,509,502,1,0,0,0,510,
	512,1,0,0,0,511,513,3,87,43,0,512,511,1,0,0,0,512,513,1,0,0,0,513,82,1,
	0,0,0,514,516,5,48,0,0,515,517,2,48,55,0,516,515,1,0,0,0,517,518,1,0,0,
	0,518,516,1,0,0,0,518,519,1,0,0,0,519,521,1,0,0,0,520,522,3,87,43,0,521,
	520,1,0,0,0,521,522,1,0,0,0,522,84,1,0,0,0,523,526,7,1,0,0,524,527,3,145,
	72,0,525,527,3,141,70,0,526,524,1,0,0,0,526,525,1,0,0,0,526,527,1,0,0,0,
	527,529,1,0,0,0,528,530,2,48,57,0,529,528,1,0,0,0,530,531,1,0,0,0,531,529,
	1,0,0,0,531,532,1,0,0,0,532,86,1,0,0,0,533,534,7,2,0,0,534,88,1,0,0,0,535,
	536,7,3,0,0,536,90,1,0,0,0,537,538,5,84,0,0,538,539,5,82,0,0,539,540,5,
	85,0,0,540,547,5,69,0,0,541,542,5,70,0,0,542,543,5,65,0,0,543,544,5,76,
	0,0,544,545,5,83,0,0,545,547,5,69,0,0,546,537,1,0,0,0,546,541,1,0,0,0,547,
	92,1,0,0,0,548,549,5,76,0,0,549,550,3,95,47,0,550,94,1,0,0,0,551,554,5,
	39,0,0,552,555,3,101,50,0,553,555,8,4,0,0,554,552,1,0,0,0,554,553,1,0,0,
	0,555,556,1,0,0,0,556,557,5,39,0,0,557,96,1,0,0,0,558,559,5,76,0,0,559,
	560,3,99,49,0,560,98,1,0,0,0,561,566,5,34,0,0,562,565,3,101,50,0,563,565,
	8,5,0,0,564,562,1,0,0,0,564,563,1,0,0,0,565,568,1,0,0,0,566,564,1,0,0,0,
	566,567,1,0,0,0,567,569,1,0,0,0,568,566,1,0,0,0,569,570,5,34,0,0,570,100,
	1,0,0,0,571,572,5,92,0,0,572,576,7,6,0,0,573,576,3,103,51,0,574,576,3,105,
	52,0,575,571,1,0,0,0,575,573,1,0,0,0,575,574,1,0,0,0,576,102,1,0,0,0,577,
	578,5,92,0,0,578,579,5,117,0,0,579,580,3,111,55,0,580,581,3,111,55,0,581,
	582,3,111,55,0,582,583,3,111,55,0,583,104,1,0,0,0,584,585,5,92,0,0,585,
	586,2,48,51,0,586,587,2,48,55,0,587,594,2,48,55,0,588,589,5,92,0,0,589,
	590,2,48,55,0,590,594,2,48,55,0,591,592,5,92,0,0,592,594,2,48,55,0,593,
	584,1,0,0,0,593,588,1,0,0,0,593,591,1,0,0,0,594,106,1,0,0,0,595,596,7,7,
	0,0,596,108,1,0,0,0,597,598,7,8,0,0,598,110,1,0,0,0,599,600,7,9,0,0,600,
	112,1,0,0,0,601,602,5,38,0,0,602,114,1,0,0,0,603,604,5,42,0,0,604,116,1,
	0,0,0,605,606,5,64,0,0,606,118,1,0,0,0,607,608,5,94,0,0,608,120,1,0,0,0,
	609,610,5,58,0,0,610,122,1,0,0,0,611,612,5,44,0,0,612,124,1,0,0,0,613,614,
	5,47,0,0,614,615,5,47,0,0,615,126,1,0,0,0,616,617,5,61,0,0,617,128,1,0,
	0,0,618,619,5,47,0,0,619,130,1,0,0,0,620,621,5,60,0,0,621,132,1,0,0,0,622,
	623,5,123,0,0,623,134,1,0,0,0,624,625,5,91,0,0,625,136,1,0,0,0,626,627,
	5,40,0,0,627,138,1,0,0,0,628,629,5,60,0,0,629,630,5,60,0,0,630,140,1,0,
	0,0,631,632,5,45,0,0,632,142,1,0,0,0,633,634,5,37,0,0,634,144,1,0,0,0,635,
	636,5,43,0,0,636,146,1,0,0,0,637,638,5,62,0,0,638,148,1,0,0,0,639,640,5,
	125,0,0,640,150,1,0,0,0,641,642,5,93,0,0,642,152,1,0,0,0,643,644,5,41,0,
	0,644,154,1,0,0,0,645,646,5,62,0,0,646,647,5,62,0,0,647,156,1,0,0,0,648,
	649,5,58,0,0,649,650,5,58,0,0,650,158,1,0,0,0,651,652,5,59,0,0,652,160,
	1,0,0,0,653,654,5,47,0,0,654,655,5,42,0,0,655,162,1,0,0,0,656,657,5,42,
	0,0,657,658,5,47,0,0,658,164,1,0,0,0,659,660,5,126,0,0,660,166,1,0,0,0,
	661,662,5,124,0,0,662,168,1,0,0,0,663,665,7,10,0,0,664,663,1,0,0,0,665,
	666,1,0,0,0,666,664,1,0,0,0,666,667,1,0,0,0,667,668,1,0,0,0,668,669,6,84,
	0,0,669,170,1,0,0,0,34,0,411,413,420,424,434,444,450,454,457,463,466,469,
	474,478,483,486,489,496,499,506,509,512,518,521,526,531,546,554,564,566,
	575,593,666,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!DdsIdlLexer.__ATN) {
			DdsIdlLexer.__ATN = new ATNDeserializer().deserialize(DdsIdlLexer._serializedATN);
		}

		return DdsIdlLexer.__ATN;
	}


	static DecisionsToDFA = DdsIdlLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}